# WARNING: This OpenAPI spec is experimental and does not match current implementation.
# TODO: Update content types to reflect HTML responses and form data.
openapi: 3.1.0
info:
  title: Task Management API
  description: API for a task management application with user authentication
  version: 1.0.0

servers:
  - url: localhost:8080
    description: Development server

paths:
  /:
    get:
      summary: Home page
      description: Redirects to /login if not logged in, otherwise redirects to /dashboard
      responses:
        "302":
          description: Redirect to appropriate page
          headers:
            Location:
              schema:
                type: string
              description: URL to redirect to (/login or /dashboard)

  /login:
    get:
      summary: Show login form
      description: Displays the login form for user authentication
      responses:
        "200":
          description: Login form displayed successfully
          content:
            text/html:
              schema:
                type: string
    post:
      summary: Submit login form
      description: Process user login credentials
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: User's username or email
                password:
                  type: string
                  format: password
                  description: User's password
      responses:
        "302":
          description: Successful login, redirect to dashboard
          headers:
            Location:
              schema:
                type: string
                example: "/dashboard"
        "401":
          description: Invalid credentials
        "400":
          description: Bad request, invalid form data

  /register:
    get:
      summary: Show registration form
      description: Displays the user registration form
      responses:
        "200":
          description: Registration form displayed successfully
          content:
            text/html:
              schema:
                type: string
    post:
      summary: Submit registration form
      description: Process new user registration
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  description: Chosen username
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  format: password
                  description: Chosen password
                confirmPassword:
                  type: string
                  format: password
                  description: Password confirmation
      responses:
        "302":
          description: Successful registration, redirect to login
          headers:
            Location:
              schema:
                type: string
                example: "/login"
        "400":
          description: Bad request, invalid form data

  /dashboard:
    get:
      summary: Show dashboard
      description: Displays user dashboard with task summaries
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Dashboard displayed successfully
          content:
            text/html:
              schema:
                type: string
        "401":
          description: Unauthorized, user not logged in
          headers:
            Location:
              schema:
                type: string
                example: "/login"

  /about:
    get:
      summary: Show about page
      description: Displays information about the application
      responses:
        "200":
          description: About page displayed successfully
          content:
            text/html:
              schema:
                type: string

  /logout:
    get:
      summary: Log out
      description: Logs out the current user and redirects to login page
      security:
        - cookieAuth: []
      responses:
        "302":
          description: Successful logout, redirect to login
          headers:
            Location:
              schema:
                type: string
                example: "/login"

  /tasks:
    get:
      summary: List all tasks
      description: Lists all tasks for the current user with details
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Tasks listed successfully
          content:
            text/html:
              schema:
                type: string
        "401":
          description: Unauthorized, user not logged in

  /tasks/create:
    get:
      summary: Show task creation form
      description: Displays form to create a new task
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Task creation form displayed successfully
          content:
            text/html:
              schema:
                type: string
        "401":
          description: Unauthorized, user not logged in
    post:
      summary: Submit task creation
      description: Process new task creation
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - title
              properties:
                title:
                  type: string
                  description: Task title
                description:
                  type: string
                  description: Task description
                dueDate:
                  type: string
                  format: date
                  description: Due date for the task
      responses:
        "302":
          description: Task created successfully, redirect to tasks list
          headers:
            Location:
              schema:
                type: string
                example: "/tasks"
        "400":
          description: Bad request, invalid form data
        "401":
          description: Unauthorized, user not logged in

  /tasks/{id}:
    get:
      summary: Show task details
      description: Display details for a specific task in editable form
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Task details displayed successfully
          content:
            text/html:
              schema:
                type: string
        "401":
          description: Unauthorized, user not logged in
        "404":
          description: Task not found

  /tasks/delete/{id}:
    post:
      summary: Delete task
      description: Delete a specific task
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: string
            format: uuid
      responses:
        "302":
          description: Task deleted successfully, redirect to tasks list
          headers:
            Location:
              schema:
                type: string
                example: "/tasks"
        "401":
          description: Unauthorized, user not logged in
        "404":
          description: Task not found

  /tasks/done/{id}:
    post:
      summary: Mark task as done
      description: Mark a specific task as completed
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - checked
              properties:
                checked:
                  type: boolean
                  description: Whether the task is marked as completed
      responses:
        "302":
          description: Task marked as done successfully, redirect to tasks list
          headers:
            Location:
              schema:
                type: string
                example: "/tasks"
        "400":
          description: Bad request, invalid JSON body
        "401":
          description: Unauthorized, user not logged in
        "404":
          description: Task not found

  /tasks/update/{id}:
    post:
      summary: Update task
      description: Update details of a specific task
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Updated task title
                description:
                  type: string
                  description: Updated task description
                dueDate:
                  type: string
                  format: date
                  description: Updated due date
                status:
                  type: string
                  description: Updated task status
                  enum: [pending, in_progress, done]
      responses:
        "302":
          description: Task updated successfully, redirect to task detail or tasks list
          headers:
            Location:
              schema:
                type: string
                example: "/tasks/{id}"
        "400":
          description: Bad request, invalid form data
        "401":
          description: Unauthorized, user not logged in
        "404":
          description: Task not found

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: session_token

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
          format: email
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - username
        - email
        - createdAt

    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        dueDate:
          type: string
          format: date
        status:
          type: string
          enum: [pending, in_progress, done]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - userId
        - title
        - status
        - createdAt
